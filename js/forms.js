// forms.js – handles AJAX submission for hero email signup and contact us form
// Author: Generated by Cascade

document.addEventListener('DOMContentLoaded', () => {
  /* ---------------- Category → Sub-category dropdown ---------------- */
  const categoryMap = {
    Shopping: ['Marketplace', 'Food & Grocery', 'Logistics'],
    Services: ['Delivery', 'Utilities', 'Repairs'],
    Travel:   ['Flight', 'Hotel', 'Car Rental']
  };
  const catSel = document.getElementById('category');
  const subSel = document.getElementById('subcategory');
  if (catSel && subSel) {
    catSel.addEventListener('change', () => {
      const opts = categoryMap[catSel.value] || [];
      subSel.innerHTML = '<option value="" disabled selected>Select sub-option</option>' +
        opts.map(o => `<option value="${o}">${o}</option>`).join('');
    });
  }

  /* ---------------- Contact Us form ---------------- */
  const contactForm = document.getElementById('contactUsForm');
  const alertEl     = document.getElementById('formAlert');
  if (contactForm) {
    contactForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      if (!contactForm.checkValidity()) {
        contactForm.classList.add('was-validated');
        return;
      }

      const data = new FormData(contactForm);
      if (alertEl) alertEl.textContent = 'Sending...';
      try {
        const res   = await fetch('contact.php', { method: 'POST', body: data });
        const json  = await res.json();

        if (json.success) {
          if (alertEl) alertEl.textContent = 'Thank you! We will get back to you shortly.';
          contactForm.reset();
          if (subSel) subSel.innerHTML = '<option value="" disabled selected>Select sub-option</option>';
        } else {
          if (alertEl) alertEl.textContent = json.message || 'Oops, something went wrong. Please try again.';
        }
      } catch (err) {
        if (alertEl) alertEl.textContent = 'Network error. Please try again.';
      }
    });
  }

  /* ---------------- Hero newsletter signup form ---------------- */
  const heroForm = document.getElementById('cta-form');
  if (heroForm) {
    heroForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      if (!heroForm.checkValidity()) {
        heroForm.classList.add('was-validated');
        return;
      }

      const emailInput = heroForm.querySelector('input[type="email"]');
      if (!emailInput) return;

      const submitBtn  = heroForm.querySelector('button[type="submit"]');
      const original   = submitBtn ? submitBtn.textContent : '';
      if (submitBtn) submitBtn.textContent = 'Sending...';

      try {
        const res  = await fetch('subscribe.php', {
          method: 'POST',
          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
          body: 'email=' + encodeURIComponent(emailInput.value.trim())
        });
        const json = await res.json();

        if (json.success) {
          if (submitBtn) submitBtn.textContent = 'Thank you!';
          heroForm.reset();
        } else {
          if (submitBtn) submitBtn.textContent = 'Try again';
          alert(json.message || 'Unable to subscribe at the moment.');
        }
      } catch (err) {
        if (submitBtn) submitBtn.textContent = 'Network error';
      } finally {
        // Restore button after 3 s
        setTimeout(() => {
          if (submitBtn) submitBtn.textContent = original;
        }, 3000);
      }
    });
  }
});
